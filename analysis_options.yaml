# The MIT License
#
# Copyright 2020 Noor Dawod. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
# of the Software, and to permit persons to whom the Software is furnished to do
# so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Read more about Dart Analysis Options: https://dart.dev/guides/language/analysis-options

# https://pub.dev/packages/pedantic
include: package:pedantic/analysis_options.yaml

linter:
    rules:
        - missing_whitespace_between_adjacent_strings
        - no_runtimeType_toString
        - unnecessary_string_interpolations
        - always_put_control_body_on_new_line
        - always_put_required_named_parameters_first
        - avoid_returning_null_for_future
        - avoid_field_initializers_in_const_classes
        - avoid_function_literals_in_foreach_calls
        - avoid_implementing_value_types
        - avoid_js_rounded_ints
        - avoid_positional_boolean_parameters
        - avoid_private_typedef_functions
        - avoid_redundant_argument_values
        - avoid_renaming_method_parameters
        - avoid_returning_null
        - avoid_returning_null_for_void
        - avoid_returning_this
        - avoid_setters_without_getters
        - avoid_single_cascade_in_expression_statements
        - avoid_types_on_closure_parameters
        - avoid_unnecessary_containers
        - avoid_unused_constructor_parameters
        - avoid_void_async
        - avoid_bool_literals_in_conditional_expressions
        - avoid_catches_without_on_clauses
        - avoid_catching_errors
        - avoid_classes_with_only_static_members
        - avoid_slow_async_io
        - await_only_futures
        - camel_case_extensions
        - camel_case_types
        - cascade_invocations
        - cancel_subscriptions
        - constant_identifier_names
        - close_sinks
        - control_flow_in_finally
        - curly_braces_in_flow_control_structures
        - directives_ordering
        - diagnostic_describe_all_properties
        - empty_catches
        - empty_constructor_bodies
        - empty_statements
        - file_names
        - flutter_style_todos
        - hash_and_equals
        - implementation_imports
        - iterable_contains_unrelated_type
        - join_return_with_assignment
        - library_names
        - library_prefixes
        - list_remove_unrelated_type
        - literal_only_boolean_expressions
        - no_adjacent_strings_in_list
        - no_logic_in_create_state
        - non_constant_identifier_names
        - null_closures
        - omit_local_variable_types
        - one_member_abstracts
        - only_throw_errors
        - overridden_fields
        - package_api_docs
        - package_prefixed_library_names
        - parameter_assignments
        - prefer_asserts_in_initializer_lists
        - prefer_constructors_over_static_methods
        - prefer_const_constructors
        - prefer_const_constructors_in_immutables
        - prefer_const_declarations
        - prefer_const_literals_to_create_immutables
        - prefer_equal_for_default_values
        - prefer_expression_function_bodies
        - prefer_final_in_for_each
        - prefer_final_locals
        - prefer_foreach
        - prefer_function_declarations_over_variables
        - prefer_if_elements_to_conditional_expressions
        - prefer_initializing_formals
        - prefer_inlined_adds
        - prefer_interpolation_to_compose_strings
        - prefer_is_not_operator
        - prefer_mixin
        - prefer_null_aware_operators
        - prefer_relative_imports
        - prefer_single_quotes
        - prefer_typing_uninitialized_variables
        - prefer_void_to_null
        - test_types_in_equals
        - throw_in_finally
        - use_key_in_widget_constructors
        - package_names
        - provide_deprecation_message
        - public_member_api_docs
        - sort_child_properties_last
        - sort_constructors_first
        - sort_pub_dependencies
        - sort_unnamed_constructors_first
        - unnecessary_brace_in_string_interps
        - use_full_hex_values_for_flutter_colors
        - use_setters_to_change_properties
        - use_string_buffers
        - use_to_and_as_if_applicable
        - unnecessary_await_in_return
        - unnecessary_getters_setters
        - unnecessary_lambdas
        - unnecessary_overrides
        - unnecessary_null_aware_assignments
        - unnecessary_parenthesis
        - unnecessary_statements
        - void_checks

analyzer:
    enable-experiment:
        - extension-methods

    errors:
        invalid_assignment: warning
        missing_return: error
        dead_code: warning
        always_declare_return_types: error
        camel_case_types: warning
        empty_constructor_bodies: info
        annotate_overrides: error
        avoid_init_to_null: error
        constant_identifier_names: warning
        one_member_abstracts: warning
        slash_for_doc_comments: warning
        sort_constructors_first: warning
        unnecessary_brace_in_string_interps: warning
        missing_required_param: error
        unawaited_futures: error
        type_init_formals: error
        todo: info

    exclude:
        - lib/src/**/*.g.dart
        - lib/generated/
        - lib/intl/

    strong-mode:
        implicit-casts: false
        implicit-dynamic: false
